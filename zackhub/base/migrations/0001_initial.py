# Generated by Django 4.2.5 on 2023-09-28 17:05

import base.blocks
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteInfoSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook URL')),
                ('github_url', models.URLField(blank=True, verbose_name='GitHub URL')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram URL')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='LinkedIn URL')),
                ('twitter_url', models.URLField(blank=True, verbose_name='Twitter URL')),
                ('youtube_url', models.URLField(blank=True, verbose_name='YouTube URL')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
            ],
            options={
                'verbose_name': 'Contact Info',
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_title', models.CharField(blank=True, max_length=255)),
                ('hero_subtitle', models.CharField(blank=True, max_length=255)),
                ('body', wagtail.fields.StreamField([('section', wagtail.blocks.StructBlock([('section_id', wagtail.blocks.CharBlock(help_text='Used for admin readability & anchor creation (e.g., <section id="section-name">).', label='Section ID', required=False)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('css_classes', wagtail.blocks.CharBlock(default='text-center py-5', help_text='Add additional predefined CSS Classes for this whole section.', label='Section CSS Classes', required=False)), ('custom_css', wagtail.blocks.CharBlock(help_text='Add inline css to the section tag for this section.', label='Section Custom CSS', required=False)), ('container', wagtail.blocks.BooleanBlock(default=True, required=False)), ('content', wagtail.blocks.StreamBlock([('heading', base.blocks.HeadingBlock()), ('lead_text', base.blocks.LeadTextBlock()), ('body_text', base.blocks.BodyTextBlock()), ('value_cards', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.blocks.CharBlock()), ('description', wagtail.blocks.TextBlock(required=False))]), icon='pick', template='blocks/card_list.html')), ('contact_form', base.blocks.ContactFormBlock()), ('raw_html', wagtail.blocks.RawHTMLBlock(icon='code', label='Raw HTML'))], required=False))])), ('block_list', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.images.blocks.ImageChooserBlock()), ('background_image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock()), ('url', wagtail.blocks.PageChooserBlock(label='URL', required=False))]), icon='placeholder', template='blocks/block_list_block.html'))], blank=True, use_json_field=True)),
                ('hero_background_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('hero_cta_url', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
